name: FusionX-ALL-IN-ONE-2
on:
  pull_request:
  workflow_dispatch:
    inputs:
      KERNEL_TREE_1:
        description: 'Kernel Tree'
        default: 'https://github.com/lualua99/fusionX_sm8250'
        required: true
      KERNEL_TREE_BRANCH_1:
        description: 'Kernel Tree Branch (SUSFS)'
        default: 'wip-susfs'
        required: false
        type: choice
        options:
          - stable-susfs
          - wip-susfs
      KERNEL_TREE_BRANCH_2:
        description: 'Kernel Tree Branch (NEXT)'
        default: 'wip-next'
        required: false
        type: choice
        options:
          - stable-next
          - wip-next
      KERNEL_TREE_BRANCH_3:
        description: 'Kernel Tree Branch (NOKSU)'
        default: 'wip-noksu'
        required: false
        type: choice
        options:
          - stable-noksu
          - wip-noksu
      VERSION:
        description: 'Zip Version'
        default: '2.0'
        required: false
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/SenseiiX/AnyKernel3'
        required: false
      CUSTOM_SED:
        description: 'Custom Kernel Version'
        default: '-FusionX-2.0'
        required: false
      CLANG_TOOLCHAIN:
        description: 'Clang toolchain selection'
        default: 'aosp clang 20'
        required: true
        type: choice
        options:
        - neutron
        - aosp clang 20
        - aosp clang 21
      USE_LTO_THIN:
        description: 'Use LTO THIN instead of FULL'
        default: 'false'
        required: false
        type: boolean
      OPLUS_FEATURES:
        description: 'Enable OPLUS features'
        required: true
        type: choice
        options:
          - 'yes'
          - 'no'
        default: 'no'

jobs:
  build:
    strategy:
      matrix:
        include:
          - branch: SUSFS
            kernel: 3
            variant: gpustk
          - branch: SUSFS
            kernel: 4
            variant: gpustk
          - branch: SUSFS
            kernel: 6
            variant: gpustk

          - branch: NEXT
            kernel: 3
            variant: uv
          - branch: NEXT
            kernel: 4
            variant: uv
          - branch: NEXT
            kernel: 6
            variant: uv
          - branch: NEXT
            kernel: 3
            variant: gpustk
          - branch: NEXT
            kernel: 4
            variant: gpustk
          - branch: NEXT
            kernel: 6
            variant: gpustk

          - branch: NOKSU
            kernel: 3
            variant: gpustk
          - branch: NOKSU
            kernel: 4
            variant: gpustk
          - branch: NOKSU
            kernel: 6
            variant: gpustk

          - branch: OCUV
            kernel: 1
            variant: original
          - branch: OCUV
            kernel: 2
            variant: original
          - branch: OCUV
            kernel: 5
            variant: original

    runs-on: ubuntu-latest
    env:
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Cache Clang Toolchain
        id: cache-clang
        uses: actions/cache@v4
        with:
          path: |
            clang-neutron
            clang-aosp-20
            clang-aosp-21
          key: clang-toolchain-${{ github.event.inputs.CLANG_TOOLCHAIN }}-${{ hashFiles('**/clang-version') }}
          restore-keys: |
            clang-toolchain-${{ github.event.inputs.CLANG_TOOLCHAIN }}-

      - name: Download & Extract Clang (If not cached)
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          if [[ "${{ github.event.inputs.CLANG_TOOLCHAIN }}" == "aosp clang 20" ]]; then
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
            mkdir -p clang-aosp-20
            tar -xf clang.tar.gz -C clang-aosp-20
            echo "aosp-20-r547379" > clang-version
          elif [[ "${{ github.event.inputs.CLANG_TOOLCHAIN }}" == "aosp clang 21" ]]; then
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/603a89415bbb04dff8bc577b95534479ec13fdc5/clang-r574158.tar.gz -O clang.tar.gz
            mkdir -p clang-aosp-21
            tar -xf clang.tar.gz -C clang-aosp-21
            echo "aosp-21-r574158" > clang-version
          else
            wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
            mkdir -p clang-neutron
            unzstd -d clang.tar.zst
            tar -xf clang.tar -C clang-neutron
            echo "neutron-10032024" > clang-version
          fi

      - name: Set Clang Path
        run: |
          if [[ "${{ github.event.inputs.CLANG_TOOLCHAIN }}" == "aosp clang 20" ]]; then
            echo "CLANG_PATH=$(pwd)/clang-aosp-20/bin" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.CLANG_TOOLCHAIN }}" == "aosp clang 21" ]]; then
            echo "CLANG_PATH=$(pwd)/clang-aosp-21/bin" >> $GITHUB_ENV
          else
            echo "CLANG_PATH=$(pwd)/clang-neutron/bin" >> $GITHUB_ENV
          fi

      - name: Set Kernel Environment Variables
        run: |
          echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_1 }}" >> $GITHUB_ENV
          case "${{ matrix.branch }}" in
            SUSFS) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_1 }}" >> $GITHUB_ENV
                   echo "BRANCH_NAME=SUSFS" >> $GITHUB_ENV ;;
            NEXT) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_2 }}" >> $GITHUB_ENV
                  echo "BRANCH_NAME=NEXT" >> $GITHUB_ENV ;;
            NOKSU) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_3 }}" >> $GITHUB_ENV
                   echo "BRANCH_NAME=NOKSU" >> $GITHUB_ENV ;;
            OCUV) echo "KERNEL_TREE_BRANCH=ocuv" >> $GITHUB_ENV
                  echo "BRANCH_NAME=OCUV" >> $GITHUB_ENV ;;
          esac

      - name: Checkout Kernel
        run: |
          git clone --depth=1 --branch "${{ env.KERNEL_TREE_BRANCH }}" "${{ env.KERNEL_TREE }}" kernel_tree

      - name: Kernel Version
        run: |
          cd kernel_tree
          if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FusionX-2.0" ]]; then
            sed -i -e 's/CONFIG_LOCALVERSION="-FusionX-2.0"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/munch_defconfig
          fi

      - name: Change LTO Configuration to THIN
        if: ${{ github.event.inputs.USE_LTO_THIN == 'true' }}
        run: |
          cd kernel_tree
          echo "Changing LTO configuration from FULL to THIN..."
          sed -i -e '
          /CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y/c\CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
          /CONFIG_HAS_LTO_CLANG=y/c\CONFIG_HAS_LTO_CLANG=y
          /# CONFIG_LTO_NONE is not set/c\# CONFIG_LTO_NONE is not set
          /CONFIG_LTO_CLANG_FULL=y/c\# CONFIG_LTO_CLANG_FULL is not set
          /# CONFIG_LTO_CLANG_THIN is not set/c\CONFIG_LTO_CLANG_THIN=y
          ' arch/arm64/configs/vendor/munch_defconfig

      - name: Enable OPLUS Features
        if: ${{ github.event.inputs.OPLUS_FEATURES == 'yes' }}
        run: |
          cd kernel_tree
          sed -i -e '/# CONFIG_OPLUS_PORT is not set/c\CONFIG_OPLUS_PORT=y' arch/arm64/configs/vendor/munch_defconfig

      - name: Remove cycle count
        run: |
          cd kernel_tree
          sed -i '/case POWER_SUPPLY_PROP_CYCLE_COUNT:/,/break;/c\
          \tcase POWER_SUPPLY_PROP_CYCLE_COUNT:\
          \t#ifdef CONFIG_BATT_VERIFY_BY_DS28E16\
          \t\tpval->intval = fg->maxim_cycle_count;\
          \t#else\
          \t\trc = get_cycle_count(chip->counter, &pval->intval);\
          \t#endif\
          \t\tbreak;' drivers/power/supply/qcom/qpnp-fg-gen4.c

      - name: Apply Modifications (if swift build)
        if: matrix.kernel == 5 || matrix.kernel == 6
        run: |
          cd kernel_tree
          sed -i -e '/<2841600>,/c\<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/d' arch/arm64/boot/dts/vendor/qcom/kona.dtsi

      - name: Revert to stock gpufreq (for gpustk variant)
        if: matrix.variant == 'gpustk'
        run: |
          cd kernel_tree
          patch -p1 -f < "0001-stock-gpu-freq.patch"

      # 允许 NOKSU 分支应用补丁
      - name: Apply Patches (SUSFS, NEXT and NOKSU)
        if: matrix.branch == 'NOKSU'
        run: |
          cd kernel_tree
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git
          patch -p1 < SukiSU_patch/4.19/ksu_hooks_sukisu_4.19.patch

      # NOKSU 分支专属步骤：打完补丁后执行脚本生成完整配置
      - name: Generate full config for NOKSU (after patches)
        if: matrix.branch == 'NOKSU'
        run: |
          cd kernel_tree  # 进入内核源码目录执行脚本
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s nongki

      - name: Apply Modifications (if modified build)
        if: matrix.kernel == 2 || matrix.kernel == 4
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi

      - name: Build Kernel
        run: |
          export PATH="${{ env.CLANG_PATH }}:$PATH"
          export KBUILD_BUILD_USER="senx"
          export KBUILD_BUILD_HOST="ubuntu"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          export MAKE_ARGS="ARCH=arm64 SUBARCH=arm64 O=out CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1"
          
          cd kernel_tree
          
          make $MAKE_ARGS vendor/munch_defconfig
          scripts/config --file out/.config \
          -e KSU \
          -e KSU_MANUAL_HOOK \
          -e KPROBES \
          -e HAVE_KPROBES \
          -e KPROBE_EVENTS \
          -e KPM \
          -e KALLSYMS \
          -e KALLSYMS_ALL
          make $MAKE_ARGS -j$(nproc --all)
           
          if [[ "${{ matrix.branch }}" == "OCUV" ]]; then
            if [[ "${{ matrix.kernel }}" == 1 ]]; then
              mv out/arch/arm64/boot/dtbo.img ../munch-aosp-dtbo.img
              mv out/arch/arm64/boot/dtb.img ../munch-normal-dtb
            elif [[ "${{ matrix.kernel }}" == 2 ]]; then
              mv out/arch/arm64/boot/dtbo.img ../munch-miui-dtbo.img
              mv out/arch/arm64/boot/dtb.img ../munch-effcpu-dtb
            elif [[ "${{ matrix.kernel }}" == 5 ]]; then
              mv out/arch/arm64/boot/dtb.img ../munch-slightuc-dtb
            fi
          elif [[ "${{ matrix.branch }}" == "NEXT" && "${{ matrix.variant }}" == "uv" ]]; then
            if [[ "${{ matrix.kernel }}" == 3 ]]; then
              cp out/arch/arm64/boot/Image ../Image
              mv out/arch/arm64/boot/dtb.img ../munch-normal-uv-dtb
            elif [[ "${{ matrix.kernel }}" == 4 ]]; then
              mv out/arch/arm64/boot/dtb.img ../munch-effcpu-uv-dtb
            elif [[ "${{ matrix.kernel }}" == 6 ]]; then
              mv out/arch/arm64/boot/dtb.img ../munch-slightuc-uv-dtb
            fi
          else
            if [[ "${{ matrix.kernel }}" == 3 ]]; then
              cp out/arch/arm64/boot/Image ../Image
              mv out/arch/arm64/boot/dtb.img ../munch-normal-gpustk-dtb
            elif [[ "${{ matrix.kernel }}" == 4 ]]; then
              mv out/arch/arm64/boot/dtb.img ../munch-effcpu-gpustk-dtb
            elif [[ "${{ matrix.kernel }}" == 6 ]]; then
              mv out/arch/arm64/boot/dtb.img ../munch-slightuc-gpustk-dtb
            fi
          fi

      - name: Upload OCUV Kernel 1 Components
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 1 && matrix.branch == 'OCUV'
        with:
          name: ocuv-kernel-1-components
          path: |
            munch-aosp-dtbo.img
            munch-normal-dtb

      - name: Upload OCUV Kernel 2 Components
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 2 && matrix.branch == 'OCUV'
        with:
          name: ocuv-kernel-2-components
          path: |
            munch-miui-dtbo.img
            munch-effcpu-dtb

      - name: Upload OCUV Kernel 5 Components
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 5 && matrix.branch == 'OCUV'
        with:
          name: ocuv-kernel-5-components
          path: |
            munch-slightuc-dtb

      - name: Upload NEXT UV Kernel 3 (with Image)
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 3 && matrix.branch == 'NEXT' && matrix.variant == 'uv'
        with:
          name: next-uv-kernel-3-base
          path: |
            Image
            munch-normal-uv-dtb

      - name: Upload NEXT UV Kernel 4
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 4 && matrix.branch == 'NEXT' && matrix.variant == 'uv'
        with:
          name: next-uv-kernel-4
          path: |
            munch-effcpu-uv-dtb

      - name: Upload NEXT UV Kernel 6
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 6 && matrix.branch == 'NEXT' && matrix.variant == 'uv'
        with:
          name: next-uv-kernel-6
          path: |
            munch-slightuc-uv-dtb

      - name: Upload Branch Kernel 3 (with Image) - GPUSTK
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 3 && matrix.variant == 'gpustk'
        with:
          name: kernel-${{ matrix.branch }}-3-gpustk
          path: |
            Image
            munch-normal-gpustk-dtb

      - name: Upload Branch Kernel 4 - GPUSTK
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 4 && matrix.variant == 'gpustk'
        with:
          name: kernel-${{ matrix.branch }}-4-gpustk
          path: |
            munch-effcpu-gpustk-dtb

      - name: Upload Branch Kernel 6 - GPUSTK
        uses: actions/upload-artifact@v4
        if: matrix.kernel == 6 && matrix.variant == 'gpustk'
        with:
          name: kernel-${{ matrix.branch }}-6-gpustk
          path: |
            munch-slightuc-gpustk-dtb

  package_anykernel:
    needs: build
    strategy:
      matrix:
        branch: [SUSFS, NEXT, NOKSU]
    runs-on: ubuntu-latest

    steps:
      - name: Download OCUV Kernel 1 Components
        uses: actions/download-artifact@v4
        with:
          name: ocuv-kernel-1-components
          path: ocuv-kernel-1

      - name: Download OCUV Kernel 2 Components
        uses: actions/download-artifact@v4
        with:
          name: ocuv-kernel-2-components
          path: ocuv-kernel-2

      - name: Download OCUV Kernel 5 Components
        uses: actions/download-artifact@v4
        with:
          name: ocuv-kernel-5-components
          path: ocuv-kernel-5

      - name: Download NEXT UV Kernel 3 (with Image)
        uses: actions/download-artifact@v4
        with:
          name: next-uv-kernel-3-base
          path: next-uv-kernel-3

      - name: Download NEXT UV Kernel 4
        uses: actions/download-artifact@v4
        with:
          name: next-uv-kernel-4
          path: next-uv-kernel-4

      - name: Download NEXT UV Kernel 6
        uses: actions/download-artifact@v4
        with:
          name: next-uv-kernel-6
          path: next-uv-kernel-6

      - name: Download Branch Kernel 3 (with Image) - GPUSTK
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.branch }}-3-gpustk
          path: branch-kernel-3-gpustk

      - name: Download Branch Kernel 4 - GPUSTK
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.branch }}-4-gpustk
          path: branch-kernel-4-gpustk

      - name: Download Branch Kernel 6 - GPUSTK
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.branch }}-6-gpustk
          path: branch-kernel-6-gpustk

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b fusionX AnyKernel3-${{ matrix.branch }}

      - name: Create Folder Structure and Organize Files
        run: |
          mkdir -p AnyKernel3-${{ matrix.branch }}/dtbs/{ocuv,uv,stock}
          
          cp branch-kernel-3-gpustk/Image AnyKernel3-${{ matrix.branch }}/
          
          cp ocuv-kernel-1/munch-aosp-dtbo.img AnyKernel3-${{ matrix.branch }}/
          cp ocuv-kernel-2/munch-miui-dtbo.img AnyKernel3-${{ matrix.branch }}/
          cp ocuv-kernel-1/munch-normal-dtb AnyKernel3-${{ matrix.branch }}/dtbs/ocuv/
          cp ocuv-kernel-2/munch-effcpu-dtb AnyKernel3-${{ matrix.branch }}/dtbs/ocuv/
          cp ocuv-kernel-5/munch-slightuc-dtb AnyKernel3-${{ matrix.branch }}/dtbs/ocuv/
          
          cp next-uv-kernel-3/munch-normal-uv-dtb AnyKernel3-${{ matrix.branch }}/dtbs/uv/
          cp next-uv-kernel-4/munch-effcpu-uv-dtb AnyKernel3-${{ matrix.branch }}/dtbs/uv/
          cp next-uv-kernel-6/munch-slightuc-uv-dtb AnyKernel3-${{ matrix.branch }}/dtbs/uv/
          
          cp branch-kernel-3-gpustk/munch-normal-gpustk-dtb AnyKernel3-${{ matrix.branch }}/dtbs/stock/
          cp branch-kernel-4-gpustk/munch-effcpu-gpustk-dtb AnyKernel3-${{ matrix.branch }}/dtbs/stock/
          cp branch-kernel-6-gpustk/munch-slightuc-gpustk-dtb AnyKernel3-${{ matrix.branch }}/dtbs/stock/

      - name: Define ZIP Name
        run: |
          export TZ='Asia/Manila'
          COMPILED_DATE=$(date +%Y%m%d)
          EXTRA=""
          if [[ "${{ github.event.inputs.OPLUS_FEATURES }}" == "yes" ]]; then
            EXTRA="-OPLUS"
          fi
          echo "ZIP_NAME=[FusionX-${{ matrix.branch }}${EXTRA}]-${{ github.event.inputs.VERSION }}-$COMPILED_DATE" >> $GITHUB_ENV
          echo "KERNEL_TYPE=${{ matrix.branch }}" >> $GITHUB_ENV

      - name: Create ZIP file
        run: |
          cd AnyKernel3-${{ matrix.branch }}
          zip -r9 ../${{ env.ZIP_NAME }}.zip * -x .git* .github*

      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}.zip
